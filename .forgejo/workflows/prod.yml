name: Forgejo Actions v-workspace
run-name: ${{ runner.actor }} is testing out Forgejo Actions 🚀
on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: docker
    container:
      image: thevlang/vlang:alpine-dev
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install development libraries
        run: |
          apk add --no-cache \
            libatomic \
            musl-dev \
            mariadb-connector-c-dev \
            build-base

      - name: Build application from backend
        working-directory: backend
        run: |
          echo "🏗️ Building from backend directory..."
          v -stats -prod -o v-admin .

      - name: Verify build output
        working-directory: backend
        run: |
          if [ -f "v-admin" ]; then
            echo "✅ Build successful!"
            # 创建构建标识文件
            echo "${{ github.sha }}" > build-info.txt
          else
            echo "❌ Build failed"
            exit 1
          fi

      - name: Create build archive
        working-directory: backend
        run: |
          tar czf ../build.tar.gz v-admin etc/ Dockerfile build-info.txt
          echo "📦 Archive created:"
          ls -la ../build.tar.gz

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: build.tar.gz
          key: build-${{ github.sha }}
          restore-keys: |
            build-

  deploy:
    runs-on: docker
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: build.tar.gz
          key: build-${{ github.sha }}

      - name: Extract build artifacts
        run: |
          echo "📦 Extracting build artifacts..."
          if [ -f "build.tar.gz" ]; then
            tar xzf build.tar.gz
            echo "✅ Artifacts extracted"
            ls -la
          else
            echo "❌ No build archive found, rebuilding..."
            cd backend
            apk add build-base musl-dev
            v -prod -o v-admin .
            cp v-admin ../
            cp Dockerfile ../
          fi

      - name: Verify artifacts
        run: |
          echo "✅ Artifacts verification:"
          [ -f "v-admin" ] && echo "✓ Binary found" || echo "✗ Binary missing"
          [ -f "Dockerfile" ] && echo "✓ Dockerfile found" || echo "✗ Dockerfile missing"

      - name: Set up Docker and deploy
        run: |
          echo "🐳 Docker version:"
          docker --version

          echo "🧹 Cleaning up existing containers..."
          docker rm -f v-admin || true
          docker rmi -f avey777/v-admin || true

          echo "🔨 Building Docker image..."
          docker build -t avey777/v-admin .

          echo "🚀 Starting container..."
          docker run --name=v-admin \
            --restart=unless-stopped \
            -p 9009:9009 \
            -d avey777/v-admin

          echo "📊 Container status:"
          sleep 5
          docker ps | grep v-admin && echo "✅ Deployed successfully" || echo "❌ Deployment failed"
